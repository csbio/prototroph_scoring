m = importdata();
coloniesR = struct('deletion', {m.textdata(1)}, 'condition1', {m.textdata(2)}, 'condition2', {m.textdata(3)}, ...
        'filenum', [0], 'platenum', [0], 'traynum', [0], 'time', [0], 'unixtime', [0], ...
        'row', [0], 'column', [0], 'xcoord', [0], 'ycoord', [0], 'area', [0], ...
        'eccentricity', [0], 'perimeter', [0])
coloniesR.deletion = m.textdata(:,1);
coloniesR.condition1 = m.textdata(:,2);
coloniesR.condition2 = m.textdata(:,3);
coloniesR.filenum = m.data(:,1);
coloniesR.platenum = m.data(:,2);
coloniesR.traynum = m.data(:,3);
coloniesR.time = m.data(:,4);
coloniesR.unixtime = m.data(:,5);
coloniesR.row = m.data(:,6);
coloniesR.row = coloniesR.row + 1; % So rows aren't 0 indexed
coloniesR.column = m.data(:,7);
coloniesR.column = coloniesR.column + 1; % So columns aren't 0 indexed
coloniesR.xcoord = m.data(:,8);
coloniesR.ycoord = m.data(:,9);
coloniesR.area = m.data(:,10);
coloniesR.eccentricity = m.data(:,11);
coloniesR.perimeter = m.data(:,12);

[all_deletions,i,j] = unique(coloniesR.deletion);
coloniesR.deletion_library = all_deletions;
coloniesR.deletion_id = j;

[all_cond1,i,j] = unique(coloniesR.condition1);
coloniesR.condition1_library = all_cond1;
coloniesR.condition1_id = j;

[all_cond2,i,j] = unique(coloniesR.condition2);
coloniesR.condition2_library = all_cond2;
coloniesR.condition2_id = j;

% ========================================================================
% row = condition1_id, column = condition2_id
coloniesR.condMap = ...
    [ 17 11 0 0 0 0 0 0 0 0 15 13 14 12 0 0 16; ...
      10 0 22 23 1 2 3 4 18 19 8 6 7 5 20 21 9; ...
      37 31 0 0 0 0 0 0 0 0 35 33 34 32 0 0 36; ...
      30 24 0 0 0 0 0 0 0 0 28 26 27 25 0 0 29; ];
    
% row = condition, column = time+1
coloniesR.indexMap = ...
    [ 1 0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5; ...
    6 0 0 0 0 7 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10; ...
    11 0 0 0 0 12 0 0 0 0 13 0 0 0 0 0 0 0 0 0 0 0 0 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15; ...
    16 0 0 0 0 17 0 0 0 0 18 0 0 0 0 0 0 0 0 0 0 0 0 0 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20; ...
    21 0 0 0 0 22 0 0 0 0 23 0 0 0 0 0 0 0 0 0 0 0 0 0 24 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 25; ...
    26 0 0 0 0 27 0 0 0 0 28 0 0 0 0 0 0 0 0 0 0 0 0 0 29 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30; ...
    31 0 0 0 0 32 0 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 34 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35; ...
    36 0 0 0 0 37 0 0 0 0 38 0 0 0 0 0 0 0 0 0 0 0 0 0 39 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40; ...
    41 0 0 0 0 42 0 0 0 0 43 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45; ...
    46 0 0 0 0 47 0 0 0 0 48 0 0 0 0 0 0 0 0 0 0 0 0 0 49 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50; ...
    51 0 0 0 0 52 0 0 0 0 53 0 0 0 0 0 0 0 0 0 0 0 0 0 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 55; ...
    56 0 0 0 0 57 0 0 0 0 58 0 0 0 0 0 0 0 0 0 0 0 0 0 59 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 60; ...
    61 0 0 0 0 62 0 0 0 0 63 0 0 0 0 0 0 0 0 0 0 0 0 0 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 65; ...
    66 0 0 0 0 67 0 0 0 0 68 0 0 0 0 0 0 0 0 0 0 0 0 0 69 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 70; ...
    71 0 0 0 0 72 0 0 0 0 73 0 0 0 0 0 0 0 0 0 0 0 0 0 74 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 75; ...
    76 0 0 0 0 77 0 0 0 0 78 0 0 0 0 0 0 0 0 0 0 0 0 0 79 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 80; ...
    81 0 0 0 0 82 0 0 0 0 83 0 0 0 0 0 0 0 0 0 0 0 0 0 84 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 85; ...
    86 0 0 0 0 87 0 0 0 0 88 0 0 0 0 0 0 0 0 0 0 0 0 0 89 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 90; ...
    91 0 0 0 0 92 0 0 0 0 93 0 0 0 0 0 0 0 0 0 0 0 0 0 94 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 95; ...
    96 0 0 0 0 97 0 0 0 0 98 0 0 0 0 0 0 0 0 0 0 0 0 0 99 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100; ...
    101 0 0 0 0 102 0 0 0 0 103 0 0 0 0 0 0 0 0 0 0 0 0 0 104 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 105; ...
    106 0 0 0 0 107 0 0 0 0 108 0 0 0 0 0 0 0 0 0 0 0 0 0 109 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 110; ...
    111 0 0 0 0 112 0 0 0 0 113 0 0 0 0 0 0 0 0 0 0 0 0 0 114 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 115; ...
    116 0 0 0 0 117 0 0 0 0 118 0 0 0 0 0 0 0 0 0 0 0 0 0 119 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 120; ...
    121 0 0 0 0 122 0 0 0 0 123 0 0 0 0 0 0 0 0 0 0 0 0 0 124 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 125; ...
    126 0 0 0 0 127 0 0 0 0 128 0 0 0 0 0 0 0 0 0 0 0 0 0 129 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 130; ...
    131 0 0 0 0 132 0 0 0 0 133 0 0 0 0 0 0 0 0 0 0 0 0 0 134 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 135; ...
    136 0 0 0 0 137 0 0 0 0 138 0 0 0 0 0 0 0 0 0 0 0 0 0 139 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 140; ...
    141 0 0 0 0 142 0 0 0 0 143 0 0 0 0 0 0 0 0 0 0 0 0 0 144 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 145; ...
    146 0 0 0 0 147 0 0 0 0 148 0 0 0 0 0 0 0 0 0 0 0 0 0 149 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 150; ...
    151 0 0 0 0 152 0 0 0 0 153 0 0 0 0 0 0 0 0 0 0 0 0 0 154 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 155; ...
    156 0 0 0 0 157 0 0 0 0 158 0 0 0 0 0 0 0 0 0 0 0 0 0 159 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 160; ...
    161 0 0 0 0 162 0 0 0 0 163 0 0 0 0 0 0 0 0 0 0 0 0 0 164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 165; ...
    166 0 0 0 0 167 0 0 0 0 168 0 0 0 0 0 0 0 0 0 0 0 0 0 169 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 170; ...
    171 0 0 0 0 172 0 0 0 0 173 0 0 0 0 0 0 0 0 0 0 0 0 0 174 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 175; ...
    176 0 0 0 0 177 0 0 0 0 178 0 0 0 0 0 0 0 0 0 0 0 0 0 179 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 180; ...
    181 0 0 0 0 182 0 0 0 0 183 0 0 0 0 0 0 0 0 0 0 0 0 0 184 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 185]
  
  for i = 1:length(coloniesR.condition1_id)
      coloniesR.condition(i) = coloniesR.condMap(coloniesR.condition1_id(i),coloniesR.condition2_id(i));
      coloniesR.index(i) = coloniesR.indexMap(coloniesR.condition(i),coloniesR.time(i)+1);
      if (mod(i,100000)==0) disp(i); end
  end
