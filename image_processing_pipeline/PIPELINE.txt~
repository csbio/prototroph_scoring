** Make sure to correct all paths and filenames before running scripts

1. Split images
	In this step, all of the original JPG images with (typically) two plates per image are converted into TIFF images with single plates. This is done by running the splitImages.m script in MATLAB using a file named files.dat which lists the names of all of the images to be cut (excluding .jpg extension). The correct inputPrefix (where to look for images) and outputPrefix (where to put the images) must be set correctly with a trailing /.

2. Grid in CellProfiler
	Open CellProfiler and set the image directory from which images will be gridded. Also, set output directory for MAT files with data. Ensure, the regex in LoadImages module correctly identifies images to be gridded and set parameters in modules and simply analyze. This can be done with the automatic pipeline (less reliable data and more errors) or manually, where a person has to click to top left most point.

	Speeding up/Reducing memory usage in CellProfiler:
	1. In Preferences, reduce the number of windows opened
	2. Use SpeedUpCellProfiler module to clear memory
	3. Resize images before processing using resize module

3. Convert to CSV files
	CellProfiler outputs measurements in a MAT file. Using the printMeasurements script, this output can be converted into an easily readable CSV (actually, tab delimited) format. The printMeasurements script is for the older versions of CellProfiler which output a different format MAT file than newer versions, for which the printMeasurementsNEW script should be run.

4. Decode CSV files - MAPPING
	This is the step at which the actual mapping occurs. A Ruby script is used to go over all of the data in the CSV files and find the corresponding ORF/condition information from the mapping files. The mapping files were generated by creating CSV (tab-delimited) files from the original plate decoder Excel file. Use the appropriate mapping script and files depending on the deletion set being analyzed. Use the concatenate script to join together all of the decoded CSV files and delete the first line.

5. Concatenate all of the decoded CSV files together.
6. Run importMATLAB script
7. 
